//--------------------------------------------------------------REFRESH BUTTON--------------------------------------------------------------

const rippleButton =
  document.querySelector(".rippleButton"); /*Import the button*/

/*What to do when the "mouseover" (cursor hover) event is triggered*/
rippleButton.addEventListener("mouseover", (event) => {
  // event.pageX basically determines the position of the cursor from the left of the window along the x-axis
  // By using the "rippleButton.offsetLeft" with instanceof, we are setting the starting position from the left of the window to the left of "rippleButton", i.e., our basic button
  const x = event.pageX - rippleButton.offsetLeft;
  const y = event.pageY - rippleButton.offsetTop;

  // Now we attach the beginning of the ripple effect inside the button to the position of the cursor while hovering over the button
  // The variables --xCoord and --yCoord have been pre-defined in our css file (lines 35 and 36)
  // We insert the value of the x and y coordinates (x, y) of the cursor in relation to the button, to the variables defined in the css file to mark the position of the beginning of the ripple effect
  rippleButton.style.setProperty("--xCoord", x + "px");
  rippleButton.style.setProperty("--yCoord", y + "px");
});

//---------------------------------------------------------CONTAINER & COLOR CONTAINER---------------------------------------------------------

const containerEl = document.querySelector(".container"); //Import the container element

//Run the loop 12 times for 12 color boxes
for (let index = 0; index < 12; index++) {
  const colorContainerEl = document.createElement("div");
  colorContainerEl.classList.add("color-container");
  containerEl.appendChild(colorContainerEl);
}

const colorContainerEls = document.querySelectorAll(".color-container"); //Import for using properties on all of the color-containers

generateColors(); //This function generates random color inside the color containers and has been explained in line 36

function generateColors() {
  colorContainerEls.forEach((colorContainerEl) => {
    const newColorCode = randomColor(); //This function generates a random color code and has been explained in line 44
    colorContainerEl.style.backgroundColor = "#" + newColorCode; //Set the background color as the HEX code generated by the randomColor function
    colorContainerEl.innerText = "#" + newColorCode; //Set the color text as the HEX code generated by the randomColor function
  });
}

function randomColor() {
  const chars = "0123456789abcdef"; //Some character variables to randomize HEX codes from
  const colorCodeLength = 6; //HEX code length is 6
  let colorCode = "";
  for (let index = 0; index < colorCodeLength; index++) {
    const randomNum = Math.floor(Math.random() * chars.length); //Generates random HEX codes of the length set by colorCodeLength (i.e., 6)
    colorCode += chars.substring(randomNum, randomNum + 1);
  }
  return colorCode; //This returns the color code as the 'newColorCode' in generateColors() function
}
